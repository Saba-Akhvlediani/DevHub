# Generated by Django 4.2.10 on 2025-06-05 11:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Category Name')),
                ('name_ka', models.CharField(blank=True, max_length=200, verbose_name='Category Name (Georgian)')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('description_ka', models.TextField(blank=True, verbose_name='Description (Georgian)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Category Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_number', models.CharField(max_length=50, unique=True, verbose_name='Model Number')),
                ('name', models.CharField(max_length=200, verbose_name='Product Name')),
                ('name_ka', models.CharField(blank=True, max_length=200, verbose_name='Product Name (Georgian)')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_ka', models.TextField(blank=True, verbose_name='Description (Georgian)')),
                ('short_description', models.CharField(blank=True, max_length=500, verbose_name='Short Description')),
                ('short_description_ka', models.CharField(blank=True, max_length=500, verbose_name='Short Description (Georgian)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Retail Price (â‚¾)')),
                ('power', models.CharField(blank=True, max_length=100, verbose_name='Power')),
                ('voltage', models.CharField(blank=True, max_length=100, verbose_name='Voltage')),
                ('frequency', models.CharField(blank=True, max_length=100, verbose_name='Frequency')),
                ('temperature_settings', models.TextField(blank=True, verbose_name='Temperature Settings')),
                ('air_flow_settings', models.TextField(blank=True, verbose_name='Air Flow Settings')),
                ('cable_length', models.CharField(blank=True, max_length=100, verbose_name='Cable Length')),
                ('weight', models.CharField(blank=True, max_length=100, verbose_name='Weight')),
                ('material', models.CharField(blank=True, max_length=200, verbose_name='Material')),
                ('noise_level', models.CharField(blank=True, max_length=100, verbose_name='Noise Level')),
                ('motor_type', models.CharField(blank=True, max_length=200, verbose_name='Motor Type')),
                ('heating_element_type', models.CharField(blank=True, max_length=200, verbose_name='Heating Element Type')),
                ('additional_specs', models.JSONField(blank=True, default=dict, verbose_name='Additional Specifications')),
                ('includes', models.TextField(blank=True, verbose_name="What's Included")),
                ('includes_ka', models.TextField(blank=True, verbose_name="What's Included (Georgian)")),
                ('stock_quantity', models.PositiveIntegerField(default=0, verbose_name='Stock Quantity')),
                ('is_in_stock', models.BooleanField(default=True, verbose_name='In Stock')),
                ('meta_title', models.CharField(blank=True, max_length=200, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, max_length=300, verbose_name='Meta Description')),
                ('keywords', models.CharField(blank=True, max_length=500, verbose_name='Keywords')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Product')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Specification Name')),
                ('name_ka', models.CharField(blank=True, max_length=200, verbose_name='Specification Name (Georgian)')),
                ('value', models.CharField(max_length=500, verbose_name='Value')),
                ('value_ka', models.CharField(blank=True, max_length=500, verbose_name='Value (Georgian)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('is_important', models.BooleanField(default=False, verbose_name='Important Specification')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='products.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Specification',
                'verbose_name_plural': 'Product Specifications',
                'ordering': ['-is_important', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Image')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Alt Text')),
                ('alt_text_ka', models.CharField(blank=True, max_length=200, verbose_name='Alt Text (Georgian)')),
                ('is_main', models.BooleanField(default=False, verbose_name='Main Image')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['-is_main', 'order'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['model_number'], name='products_pr_model_n_80d291_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='products_pr_categor_50f5f1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_featured', 'is_active'], name='products_pr_is_feat_a1ecf6_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='products_pr_price_9b1a5f_idx'),
        ),
    ]
